service:
  name: plant-watering-backend

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-2

functions:
  graphql:
    handler: src/handler.graphqlHandler
    role: ServiceRole
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get

custom:
  serverless-offline:
    port: 4000

  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
    # seed: true
    # seed:
    #   test:
    #     sources:
    #       - table: Users
    #         sources: [seed-data/Users.json]
    #       - table: Tweets
    #         sources: [seed-data/Tweets.json]

resources:
  Resources:
    PlantsTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: "Plants"
        KeySchema:
          - AttributeName: plantId
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: plantId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST

    ServiceRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName: "DynamoRole"
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service:
                  - "lambda.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Policies:
          - PolicyName: "Dynamo-ServiceRole-Policy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "dynamodb:Query"
                    - "dynamodb:BatchWriteItem"
                    - "dynamodb:GetItem"
                    - "dynamodb:DeleteItem"
                    - "dynamodb:PutItem"
                    - "dynamodb:Scan"
                    - "dynamodb:UpdateItem"
                  Resource:
                    - !GetAtt PlantsTable.Arn

    XRayLambdaRolePolicy:
      Type: "AWS::IAM::Policy"
      Properties:
        PolicyName: "xray-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "xray:PutTraceSegments"
                - "xray:PutTelemetryRecords"
              Resource:
                - "*"
        Roles:
          - Ref: ServiceRole
